import AdminLayout from "../../components/adminPanel/layout";
import Head from "next/head";
import styles from "../../styles/Home.module.css";
import withAdminAuth from "../../auth/withAdminAuth";
import { EmployeePermissions } from "../../dbObjects/Employee";
import Swal from "sweetalert2";
import withReactContent from "sweetalert2-react-content";
import { useState, useEffect } from "react";
import ReactPaginate from "react-paginate";
import {
  collection,
  query,
  where,
  getDocs,
  doc,
  getDoc,
  getFirestore,
  updateDoc,
} from "firebase/firestore";
import { firebase } from "../../config";

const db = getFirestore(firebase);
const MySwal = withReactContent(Swal);

const Home = withAdminAuth(() => {
  const [totalUsers, setTotalUsers] = useState(0);
  const [totalAstrologers, setTotalAstrologers] = useState(0);
  const [totalOrders, setTotalOrders] = useState(0);
  const [commission, setCommission] = useState(0);
  const [adminWalletBalance, setadminWalletBalance] = useState(0);

  async function getAppDetails() {
   const astros = collection(db, "app_details");
   var querySnapshot = await getDoc(
     doc(astros, "astrologerDetails"));
    
   if (querySnapshot.exists()) {
     setTotalAstrologers(querySnapshot.data().astrologerCount);
   } else {
     // console.log("no")
   }
     querySnapshot = await getDoc(doc(astros, "userDetails"));

     if (querySnapshot.exists()) {
       setTotalUsers(querySnapshot.data().userCount);
     } else {
       // console.log("no")
     }
    querySnapshot = await getDoc(doc(astros, "store"));

    if (querySnapshot.exists()) {
      setTotalOrders(querySnapshot.data().orderCount);
    } else {
      // console.log("no")
    }
    querySnapshot = await getDoc(doc(astros, "money"));
    if (querySnapshot.exists()) {
      setCommission(querySnapshot.data().commission);
      setadminWalletBalance(querySnapshot.data().adminBalance);
    } else {
      // console.log("no")
    }
 }
  useEffect(() => {
    getAppDetails();
  }, []);
  async function changeCommissionHandler(e) {
    e.preventDefault();
    setCommission(e.target.commission.value);
    updateDoc(doc(collection(db, "app_details"), "money"), {
      commission:  parseInt(e.target.commission.value),
    });
    MySwal.clickConfirm();

  }
  const filterView = () => {
    MySwal.fire({
      showConfirmButton: false,
      html: (
        <div className="container">
          <h4>Change Commission</h4>
          <form onSubmit={changeCommissionHandler}>
            <input type="number" name="commission" id="commission"placeholder="enter commission"></input>
            <div className="text-end mt-4">
              <button className={"btn btn-success"} type="submit">
                Change
              </button>
            </div>
          </form>
        </div>
      ),
    });
  };
  const addPricingCategoryView = () => {
    MySwal.fire({
      showConfirmButton: false,
      html: (
        <div className="container">
          <h4>Add pricing Category</h4>
          <form onSubmit={changeCommissionHandler}>
            <label for="name">Name</label>
            <input
              type="text"
              name="name"
              id="name"
              placeholder="enter name of the new category"
            ></input>{" "}
            <br />
            <label for="name">Price Chat</label>
            <input
              type="number"
              name="priceChat"
              id="priceChat"
              placeholder="enter priceChat"
            ></input>{" "}
            <br />
            <label for="name">Price Voice</label>
            <input
              type="number"
              name="priceVideo"
              id="priceVideo"
              placeholder="enter priceVideo"
            ></input>
            <br />
            <label for="name">Price Video</label>
            <input
              type="number"
              name="priceVoice"
              id="priceVoice"
              placeholder="enter priceVoice"
            ></input>
            <div className="text-end mt-4">
              <button className={"btn btn-success"} type="submit">
                Add
              </button>
            </div>
          </form>
        </div>
      ),
    });
  };
  return (
    <>
      <div className="">
        <Head>
          <title>Dreshkan</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <h1 className={styles.title}>Admin Home</h1>
          <div className="container">
            <button onClick={filterView} className="btn btn-primary">
              Change Commission
            </button>
            <br/><br/>
           
          </div>

          <p className="">
            Total Users : {totalUsers} <br />
            Total Astrologers :{totalAstrologers} <br />
            Total Orders :{totalOrders} <br />
            Current Commission for Astrologers :{commission} <br />
            Wallet Balance : {adminWalletBalance}
          </p>
        </main>
      </div>
    </>
  );
}, EmployeePermissions.NONE);
Home.getLayout = function getLayout(page) {
  return <AdminLayout>{page}</AdminLayout>;
};

export default Home;
